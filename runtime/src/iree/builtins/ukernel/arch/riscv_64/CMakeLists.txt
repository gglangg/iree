################################################################################
# Autogenerated by build_tools/bazel_to_cmake/bazel_to_cmake.py from           #
# runtime/src/iree/builtins/ukernel/arch/riscv_64/BUILD.bazel                    #
#                                                                              #
# Use iree_cmake_extra_content from iree/build_defs.oss.bzl to add arbitrary   #
# CMake-only content.                                                          #
#                                                                              #
# To disable autogeneration for this file entirely, delete this header.        #
################################################################################

if(IREE_BUILD_COMPILER)

iree_add_all_subdirs()

iree_compiler_targeting_iree_arch(_IREE_UKERNEL_BITCODE_BUILD_RISCV_64 "riscv_64")
if(_IREE_UKERNEL_BITCODE_BUILD_RISCV_64)


## clhuang: TODO: specific
iree_select_compiler_opts(IREE_UK_COPTS_RISCV_64_BASE
  CLANG_OR_GCC
    "-march=rv64gcv"
)


iree_bitcode_library(
  NAME
    ukernel_bitcode_arch_riscv_64_entry_points
  ARCH
    riscv_64
  INTERNAL_HDRS
    "${PROJECT_BINARY_DIR}/runtime/src/iree/builtins/ukernel/internal_headers_filegroup.stamp"
    "${PROJECT_BINARY_DIR}/runtime/src/iree/schemas/cpu_data_headers_filegroup.stamp"
    "common_riscv_64.h"
    "common_riscv_64_entry_point.h"
  SRCS
    "matvec_riscv_64_entry_point.c"
)

iree_bitcode_library(
  NAME
    ukernel_bitcode_arch_riscv_64_base
  ARCH
    riscv_64
  INTERNAL_HDRS
    "${PROJECT_BINARY_DIR}/runtime/src/iree/builtins/ukernel/internal_headers_filegroup.stamp"
    "${PROJECT_BINARY_DIR}/runtime/src/iree/schemas/cpu_data_headers_filegroup.stamp"
    "common_riscv_64.h"
    "common_riscv_64_entry_point.h"
  COPTS
    "${IREE_UK_COPTS_RISCV_64_BASE}"
  SRCS
    "matvec_riscv_64_base.c"
)

iree_link_bitcode(
  NAME
    ukernel_bitcode_arch_riscv_64
  SRCS
    "ukernel_bitcode_arch_riscv_64_base.bc"
    "ukernel_bitcode_arch_riscv_64_entry_points.bc"
)

elseif(IREE_BUILD_COMPILER AND IREE_TARGET_BACKEND_LLVM_CPU)
iree_make_empty_file("${CMAKE_CURRENT_BINARY_DIR}/ukernel_bitcode_arch_riscv_64.bc")
endif()  # _IREE_UKERNEL_BITCODE_BUILD_RISCV_64

### BAZEL_TO_CMAKE_PRESERVES_ALL_CONTENT_BELOW_THIS_LINE ###

if (NOT (IREE_ARCH STREQUAL "riscv_64"))
  return()
endif()





check_cxx_compiler_flag("${IREE_UK_COPTS_RISCV_64_BASE}" IREE_UK_COPTS_RISCV_64_BASE)
configure_file("config_riscv_64.h.in" "config_riscv_64.h")

iree_cc_library(
  NAME
    common_riscv_64
  HDRS
    "common_riscv_64.h"
  DEPS
    iree::builtins::ukernel::internal_headers
    iree::schemas::cpu_data
)

set(IREE_UK_RISCV_64_DEPS "")

if(IREE_UK_BUILD_RISCV_64_BASE)
iree_cc_library(
  NAME
    riscv_64_base
  SRCS
    "matvec_riscv_64_base.c"
  COPTS
    "${IREE_UK_COPTS_RISCV_64_BASE}"
  DEPS
    iree::builtins::ukernel::internal_headers
)
list(APPEND IREE_UK_RISCV_64_DEPS "::riscv_64_base")
endif()  # IREE_UK_BUILD_RISCV_64_BASE

iree_cc_library(
  NAME
    riscv_64
  SRCS
    "matvec_riscv_64_entry_point.c"
    "matvec_riscv_64_base.c"
    "dummy.c"
  DEPS
    ::common_riscv_64
    iree::base::core_headers
    iree::schemas::cpu_data
    iree::builtins::ukernel::internal_headers
    ${IREE_UK_RISCV_64_DEPS}
  PUBLIC
)

set(IREE_UK_ARCH_DEPS "iree::builtins::ukernel::arch::riscv_64" PARENT_SCOPE)

endif() # IREE_BUILD_COMPILER